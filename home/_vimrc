if has('vim_starting')
    set nocompatible               " Be iMproved
    set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#rc(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'

" Recommended to install
" After install, turn shell ~/.vim/bundle/vimproc, (n,g)make -f your_machines_makefile
NeoBundle 'Shougo/vimproc'

 " My Bundles here:
 "
 " Note: You don't set neobundle setting in .gvimrc!
 " Original repos on github
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'thinca/vim-quickrun'
NeoBundle 'Shougo/neocomplcache'
NeoBundle 'vim-scripts/AutoComplPop'
NeoBundle 'Shougo/unite.vim'
NeoBundle 'kchmck/vim-coffee-script'
NeoBundle 'tpope/vim-haml'
NeoBundle 'oceandeep'

filetype plugin indent on     " Required!
"
" Brief help
" :NeoBundleList          - list configured bundles
" :NeoBundleInstall(!)    - install(update) bundles
" :NeoBundleClean(!)      - confirm(or auto-approve) removal of unused bundles

" Installation check.
NeoBundleCheck

""" color
syntax on
"colorscheme oceandeep
"colorscheme molokai

""" zenkaku
highlight ZenkakuSpace cterm=underline ctermfg=lightblue
match ZenkakuSpace /ã€€/
set list
set lcs=tab:>-,trail:_

""" disp
set number
set ruler
set showmatch
set showcmd

""" edit
set autoindent
set cindent
set scrolloff=5 "fast scroll
set wrap
set whichwrap=b,s,h,l,<,>,[,]
set backspace=indent,eol,start

""" tab
set tabstop=4
set expandtab
set smarttab
set shiftwidth=4
set shiftround

""" search
set ignorecase
set smartcase
set nowrapscan
set hlsearch

""" statusline
set laststatus=2
set statusline=%<%f\ %m%r%h%w[%B/%b]
set statusline+=[%Y]%{'['.(&fenc!=''?&fenc:&enc).']['.&fileformat.']'}
set statusline+=%=%l/%L,%c%V%8P

""" keymap
nnoremap j gj
nnoremap k gk

""" encode
set enc=utf-8
set fenc=utf-8
set fileencodings=ucs-bom,utf-8,euc-jp,cp932,sjis,default,latin1

""" plugin 
"" neocomplcache
let g:neocomplcache_enable_at_startup = 1
"buffer
nnoremap <silent> ,ub :<C-u>Unite buffer<CR>
"file
nnoremap <silent> ,uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
"register
nnoremap <silent> ,ur :<C-u>Unite -buffer-name=register register<CR>
"recently
nnoremap <silent> ,um :<C-u>Unite file_mru<CR>
"ordinaly
nnoremap <silent> ,uu :<C-u>Unite buffer file_mru<CR>
"all
nnoremap <silent> ,ua :<C-u>UniteWithBufferDir -buffer-name=files buffer file_mru bookmark file<CR>

"" matchit.vim
source $VIMRUNTIME/macros/matchit.vim "for ruby do end
